<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	Configuration 요소는 log4j 설정의 가장 최상위 요소이다.
 -->
<Configuration status="DEBUG">
	<!-- 로그의 출력 위치를 정하는 요소이다.(콘솔, 파일, DB 등등) -->
	<Appenders>
		<!-- 콘솔에 로그 메시지를 출력한다. -->
		<Console name="console" target="SYSTEM_OUT">
		<!-- 로그의 출력 포멧을 지정한다. -->
		<!-- - status 속성은 log4j 내부 이벤트에 대한 로그 레벨을 의미한다. 
			- [%t] : 로그가 발생한 쓰레드의 명을 출력
			- %c : 패키지 포함해서 클래스 이름을 보여줌 {5} 최대 5개까지 보여준다.
			- %M : 로그가 발생한 메소드 이름
			- %msg : 사용자가 작성해준 메세지
			- %n : 개행
		-->
			<PatternLayout pattern="[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{5} %M - %msg - %n"/>
		</Console>
		
		<!-- 파일에 로그 메시지를 출력한다. -->
		<File name="member_log_file" fileName="./logs/member_log.txt">
			<PatternLayout pattern="[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{5} %M - %msg - %n"/>
		</File>
		
		<File name="board_log_file" fileName="./logs/board_log.txt">
			<PatternLayout pattern="[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{5} %M - %msg - %n"/>
		</File>
	</Appenders>
	
	<!-- 로깅이 일어나는 부분을 그룹화하는 역할을 한다. -->
	<Loggers>
		<!-- 일반적인 로그 정책을 의미한다. -->
		<!-- 로그 레벨 : FATAL(치명적인 에러) > ERROR(실행중의 일반적인 예외) > WARN(경고.에러는 아니지만 주의 필요) > INFO(일반적인 정보) > DEBUG(일반적인 상세한 정보) > TRACE(경로 추적을 위해서 사용) -->
		<!-- 일반적으로 INFO로 출력하며, 개발때만 DEBUG로 둔다. -->
		<Root level = "INFO">
			<AppenderRef ref="console" />
		</Root>
		
		<!-- 추가로 필요한 로그 정책을 정의한다.  -->
		<Logger name="com.kh.mybatis.member" level="DEBUG">
			<AppenderRef ref="member_log_file"/>
		</Logger>
		
		<Logger name="com.kh.mybatis.board" level="DEBUG">
			<AppenderRef ref="board_log_file"/>
		</Logger>
	</Loggers>
</Configuration>